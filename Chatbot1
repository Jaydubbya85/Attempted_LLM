{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8dd1b22e-2c33-44b9-bad1-fdc33ed8b23b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Simple Chatbot in Jupyter\n",
    "\n",
    "def simple_bot():\n",
    "    print(\"Hello! I'm a simple bot. Type 'bye' to exit.\")\n",
    "    while True:\n",
    "        user_input = input(\"You: How are you? \")\n",
    "        if user_input.lower() == 'bye':\n",
    "            print(\"Bot: Goodbye!\")\n",
    "            break\n",
    "        else:\n",
    "            print(f\"Bot: You said '{user_input}'.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1cfbf2bf-8169-46b1-ba77-37e008a5c8c8",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (1517746070.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[3], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    hello there\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "hello there"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3c0ce99e-0d1a-4ea4-8468-867eb688e1e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'how are you?'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(\"how are you?\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ab4ae427-d1e5-4114-b5e2-94f3814fcdfa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello! I'm your friendly Jupyter bot. Type 'bye' to exit.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  what is your name?\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: My name is JupyterBot!\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  I think you need a better name than that, what would you like?\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: I'm not sure how to respond to that. Try asking something else or type 'help'.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  your name now is 'sparky', ok?\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: My name is JupyterBot!\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  oh boy, this is going to be a long night...\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: I'm not sure how to respond to that. Try asking something else or type 'help'.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  how old are you?\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: I'm not sure how to respond to that. Try asking something else or type 'help'.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  how is the weather?\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: I can't check the weather yet, but I hope it's nice where you are!\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  bye\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: Goodbye! Have a great day!\n"
     ]
    }
   ],
   "source": [
    "# ## Slightly Smarter Chatbot\n",
    "\n",
    "def smart_bot():\n",
    "    print(\"Hello! I'm your friendly Jupyter bot. Type 'bye' to exit.\")\n",
    "    while True:\n",
    "        user_input = input(\"You: \").strip().lower()\n",
    "\n",
    "        # Greeting responses\n",
    "        if user_input in ['hi', 'hello', 'hey']:\n",
    "            print(\"Bot: Hi there! How can I help you today?\")\n",
    "        # Farewell responses\n",
    "        elif user_input in ['bye', 'goodbye', 'see you']:\n",
    "            print(\"Bot: Goodbye! Have a great day!\")\n",
    "            break\n",
    "        # Simple Q&A\n",
    "        elif \"your name\" in user_input:\n",
    "            print(\"Bot: My name is JupyterBot!\")\n",
    "        elif \"weather\" in user_input:\n",
    "            print(\"Bot: I can't check the weather yet, but I hope it's nice where you are!\")\n",
    "        elif \"help\" in user_input:\n",
    "            print(\"Bot: I can answer simple questions or just chat. Try saying 'hello' or ask about my name.\")\n",
    "        else:\n",
    "            print(\"Bot: I'm not sure how to respond to that. Try asking something else or type 'help'.\")\n",
    "\n",
    "# Run the bot\n",
    "smart_bot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aacfe8a5-a772-42f9-b931-b148bae1662f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello! I'm your friendly Jupyter bot. Type 'bye' to exit.\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  hey there! tell me a joke\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: Why did the computer show up at work late? It had a hard drive!\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "You:  add 204455 and 8900033215, give me the sum\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bot: Please say 'add X and Y' with two numbers.\n"
     ]
    }
   ],
   "source": [
    "# ## ### Slightly Smarter Chatbot with More Responses ### ## #\n",
    "\n",
    "def smarter_bot():\n",
    "    print(\"Hello! I'm your friendly Jupyter bot. Type 'bye' to exit.\")\n",
    "    while True:\n",
    "        user_input = input(\"You: \").strip().lower()\n",
    "\n",
    "        # Greetings\n",
    "        if user_input in ['hi', 'hello', 'hey', 'good morning', 'good afternoon']:\n",
    "            print(\"Bot: Hello! How are you today?\")\n",
    "        \n",
    "        # Farewells\n",
    "        elif user_input in ['bye', 'goodbye', 'see you', 'exit']:\n",
    "            print(\"Bot: Goodbye! It was nice chatting with you.\")\n",
    "            break\n",
    "        \n",
    "        # Name question\n",
    "        elif \"your name\" in user_input:\n",
    "            print(\"Bot: My name is JupyterBot, your learning buddy!\")\n",
    "        \n",
    "        # Weather\n",
    "        elif \"weather\" in user_input:\n",
    "            print(\"Bot: I can't check the weather yet, but I hope it's sunny where you are!\")\n",
    "        \n",
    "        # How are you\n",
    "        elif \"how are you\" in user_input:\n",
    "            print(\"Bot: I'm just a bunch of code, but I'm happy to help you!\")\n",
    "        \n",
    "        # Python question\n",
    "        elif \"python\" in user_input:\n",
    "            print(\"Bot: Python is a great programming languageâ€”perfect for beginners and experts alike!\")\n",
    "        \n",
    "        # Math question\n",
    "        elif \"math\" in user_input or \"calculate\" in user_input:\n",
    "            print(\"Bot: I love math! Try asking me to add two numbers, like 'add 2 and 3'.\")\n",
    "        \n",
    "        # Simple addition\n",
    "        elif user_input.startswith(\"add\"):\n",
    "            try:\n",
    "                # Extract numbers from the input\n",
    "                parts = user_input.replace(\"add\", \"\").replace(\"and\", \"\").split()\n",
    "                numbers = [int(word) for word in parts if word.isdigit()]\n",
    "                if len(numbers) == 2:\n",
    "                    result = numbers[0] + numbers[1]\n",
    "                    print(f\"Bot: {numbers[0]} + {numbers[1]} = {result}\")\n",
    "                else:\n",
    "                    print(\"Bot: Please say 'add X and Y' with two numbers.\")\n",
    "            except:\n",
    "                print(\"Bot: Sorry, I couldn't understand the numbers.\")\n",
    "        \n",
    "        # Tell a joke\n",
    "        elif \"joke\" in user_input:\n",
    "            print(\"Bot: Why did the computer show up at work late? It had a hard drive!\")\n",
    "        \n",
    "        # Help\n",
    "        elif \"help\" in user_input:\n",
    "            print(\"Bot: I can greet you, tell a joke, answer simple Python or math questions, and chat. Try 'add 2 and 3' or ask for a joke!\")\n",
    "        \n",
    "        # Default response\n",
    "        else:\n",
    "            print(\"Bot: I'm still learning. Try saying 'help' to see what I can do!\")\n",
    "\n",
    "# Run the bot\n",
    "smarter_bot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "61cbaaad-be66-472a-81be-c9d88744f4c8",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
